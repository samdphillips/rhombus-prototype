#lang rhombus/and_meta

import:
  scribble/manual expose:
    defmodule racketmodname
  "rhombus.rhm" open
  meta:
    racket/base
  meta_label:
    rhombus expose:
      import

export:
  docmodule
  rhombusmodname

meta:
  fun translate_mod(mod):
    match mod
    | '$(a :: Id)': Syntax.unwrap(a)
    | '$a / $b ...':
        base.#{string->symbol}(Syntax.unwrap(a)
                                 +& "/"
                                 +& translate_mod('$b ...'))
    | 'lib($str)':
        [symbol(lib), str]

  syntax.class Option:
    ~term
    ~pattern
    | '~lang':
        ~attr form: '~lang'
    | '~no_declare':
        ~attr form: '#{#:no-declare}'

decl.macro 'docmodule ($(option :: Option), ..., $mod ...)':
  '$(parsed(['defmodule',
             keyword(#{#:require-form}),
             unparsed('fun (mod): @rhombus(import: $$(mod))'),
             translate_mod('$mod ...'),
             option.form, ...]))'
  
expr.macro 'rhombusmodname ($mod ...) $tail ...':
  values(parsed(['racketmodname', translate_mod('$mod ...')]),
         '$tail ...')
